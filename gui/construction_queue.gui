# COPY-PASTED FOR NOW
@panel_width_minus_10 = 530			# used to be 450
@panel_width = 540  				# used to be 460
@panel_width_half = 270				# used to be 230
@panel_width_plus_10 = 550  		# used to be 470
@panel_width_plus_14 = 554			# used to be 474
@panel_width_plus_14_half = 277		# used to be 237
@panel_width_plus_20 = 560			# used to be 480
@panel_width_plus_30 = 570			# used to be 490
@panel_width_plus_70 = 610			# used to be 530

types construction_queue {
	type construction_queue = flowcontainer {
		using = default_list_position
		direction = vertical
		minimumsize = { @panel_width -1 }
		margin_bottom = 5 # was 20

		default_header = {
			blockoverride "text" {
				block "text" {
					text = "CONSTRUCTION_QUEUE"
				}
			}
		}

		widget = {
			parentanchor = hcenter
			size = { @panel_width_plus_14 50 } # was 60
			background = {
				using = dark_area
			}

			textbox = {
				text = "TOTAL_TIME_CONSTRUCTION"
				tooltip = "TOTAL_TIME_CONSTRUCTION_TOOLTIP"
				align = left|nobaseline
				parentanchor = vcenter|left
				position = { 10 0 }
				autoresize = yes
			}

			button = {
				using = default_button
				parentanchor = vcenter|right
				position = { -10 0 }
				size = { 160 40 }
				text = "CONSTRUCTION_BUTTON_PAUSE"
				tooltip = "[Country.PauseConstructionTooltip]"
				onclick = "[Execute( Country.PauseConstruction )]"
				enabled = "[IsValid( Country.PauseConstruction )]"
				visible = "[Not(Country.IsConstructionPaused)]"
			}

			button = {
				using = default_button
				parentanchor = vcenter|right
				position = { -10 0 }
				size = { 160 40 }
				text = "CONSTRUCTION_BUTTON_RESUME"
				tooltip = "[Country.ResumeConstructionTooltip]"
				onclick = "[Execute( Country.ResumeConstruction )]"
				enabled = "[IsValid( Country.ResumeConstruction )]"
				visible = "[Country.IsConstructionPaused]"
			}

		}
		
		container = {
			using = default_list_position
			minimumsize = { @panel_width_plus_14 -1 }
			maximumsize = { @panel_width_plus_14 -1 }
			
			textbox = {
				text = "CONSTRUCTION_CURRENT_PAGE"				
				autoresize = yes
				margin_top = 10
				parentanchor = center
				align = nobaseline
			}
			
			button = {
				using = default_button
				parentanchor = vcenter|left
				position = { 10 0 }
				size = { 160 40 }
				text = "CONSTRUCTION_PREVIOUS_PAGE"
				enabled = "[GreaterThan_int32(ProductionMethodsPanel.GetNumConstructionQueuePages(GetMetaPlayer.GetPlayedOrObservedCountry), '(int32)1')]"
				onclick = "[ProductionMethodsPanel.PrevConstructionQueuePage(GetMetaPlayer.GetPlayedOrObservedCountry)]"
			}				
			button = {
				using = default_button
				parentanchor = vcenter|right
				position = { -10 0 }
				size = { 160 40 }
				text = "CONSTRUCTION_NEXT_PAGE"
				enabled = "[GreaterThan_int32(ProductionMethodsPanel.GetNumConstructionQueuePages(GetMetaPlayer.GetPlayedOrObservedCountry), '(int32)1')]"
				onclick = "[ProductionMethodsPanel.NextConstructionQueuePage(GetMetaPlayer.GetPlayedOrObservedCountry)]"
			}						
		}		

		flowcontainer = {
			datamodel = "[Country.AccessPagedConstructionQueue(ProductionMethodsPanel.AccessCurrentConstructionQueuePage(GetMetaPlayer.GetPlayedOrObservedCountry))]"
			visible = "[Not(IsDataModelEmpty(Country.AccessPagedConstructionQueue(ProductionMethodsPanel.AccessCurrentConstructionQueuePage(GetMetaPlayer.GetPlayedOrObservedCountry))))]"
			direction = vertical
			spacing = 0 # was 3

			item = {
				flowcontainer = {
					datacontext = "[ConstructionQueueElement.GetBuilding]"

					using = unclickable_listentry
					direction = horizontal
					spacing = 7 # was 7
					margin_bottom = 5 # was 5

					button = {
						tooltip = "GO_TO_BUTTON_BUILDING"
						onclick = "[InformationPanelBar.OpenBuildingDetailsPanel(ConstructionQueueElement.AccessBuilding)]"
						onrightclick = "[RightClickMenuManager.ShowForBuilding(ConstructionQueueElement.AccessBuilding)]"
						parentanchor = vcenter
						
						icon = {
							size = { 36 36 } # was 45 45
							resizeparent = yes
							texture = "[ConstructionQueueElement.GetBuilding.GetTexture]"
						}
					}
					
					### NAME + PROGRESS
					widget = {
						size = { 375 26 } # was 360 30
						parentanchor = vcenter

						background = {
							visible = "[GreaterThan_CFixedPoint(ConstructionQueueElement.GetConstructionSpeed, '(CFixedPoint)0')]"
							using = paper_bg
						}
						
						default_progressbar_horizontal = {
							datacontext = "[ConstructionQueueElement.GetBuilding]"
							
							blockoverride "values" {
								value = "[ConstructionQueueElement.CalcPercentComplete]"
								min = 0 
								max = 1 
							}
							tooltip = "[ConstructionQueueElement.GetTooltip]"
							size = { 100% 100% }

							textbox = {
								visible = "[GreaterThan_CFixedPoint(ConstructionQueueElement.GetConstructionSpeed, '(CFixedPoint)0')]"
								parentanchor = left|vcenter
								align = right|nobaseline
								position = { 320 0 } # was 300 0
								text = "CONSTRUCTION_QUEUE_ELEMENT_ALLOCATION"
							}

							textbox = {
								visible = "[Not(GreaterThan_CFixedPoint(ConstructionQueueElement.GetConstructionSpeed, '(CFixedPoint)0'))]"
								parentanchor = left|vcenter
								align = right|nobaseline
								position = { 320 0 } # was 300 0
								text = "QUEUED"
							}

							textbox = {
								position = { -7 0 }
								text = "#v [ConstructionQueueElement.GetWeeksLeft]#!w"
								parentanchor = right|vcenter
								autoresize = yes
								align = right|nobaseline
							}
						}
						
						flowcontainer = {
							position = { 7 0 }
							parentanchor = vcenter
							spacing = 8
							
							textbox = {
								autoresize = yes
								align = left|nobaseline
								parentanchor = vcenter
								text = "CORINGA_IN"
								
								fontsize_min = 14
								maximumsize = { 250 -1 }
								elide = right
							}
						#	button_icon_goto = {
						#		parentanchor = vcenter
						#		size = { 25 25 }
						#		onclick = "[InformationPanelBar.OpenBuildingDetailsPanel(ConstructionQueueElement.AccessBuilding)]"
						#		tooltip = "GO_TO_BUTTON_BUILDING"
						#		block "goto_visibility" {}
						#	}
						}

						textbox = {
							position = { -7 2 }
							autoresize = yes
							align = right|nobaseline
							parentanchor = vcenter|right
							visible = "[Not(ConstructionQueueElement.IsValidConstruction)]"
							text = "@red_cross!"
							tooltip = "[ConstructionQueueElement.GetInvalidTooltip]"
						}
					}
					
					widget = { size = { 0 0 }}
					
					### BUTTONS
					button_icon_round_action = {
						size = { 30 30 }
						blockoverride "icon" {
							texture = "gfx/interface/icons/generic_icons/up_up.dds"
						}
						blockoverride "icon_size" {
							size = { 75% 75% }
						}
						parentanchor = vcenter
						tooltip = "MOVE_UP"
						enabled = "[IsValid( ConstructionQueueElement.MoveUp )]" # Assumption is that it needs to be able to be moved up in order to be moved to the top also

						click_modifiers = {
							ondefault = "[Execute( ConstructionQueueElement.MoveUp )]"
							onalt = "[Execute( ConstructionQueueElement.MoveToTop )]"
						}
					}

					button_icon_round_action = {
						size = { 30 30 }
						blockoverride "icon" {
							texture = "gfx/interface/icons/generic_icons/down_down.dds"
						}
						blockoverride "icon_size" {
							size = { 75% 75% }
						}
						parentanchor = vcenter
						tooltip = "MOVE_DOWN"
						enabled = "[IsValid( ConstructionQueueElement.MoveDown )]" # Assumption is that it needs to be able to be moved down in order to be moved to the bottom also

						click_modifiers = {
							ondefault = "[Execute( ConstructionQueueElement.MoveDown )]"
							onalt = "[Execute( ConstructionQueueElement.MoveToBottom )]"
						}
					}

					button_icon_cancel = {
						size = { 30 30 }
						parentanchor = vcenter
						tooltip = "CANCEL_CONSTRUCTION"
						onclick = "[Execute( ConstructionQueueElement.CancelConstruction )]"
					}
				}
			}
		}
		
		empty_state = {
			blockoverride "visible" {
				visible = "[Not(Country.HasConstructionQueued)]"
			}
			blockoverride "text" {
				text = "CONSTRUCTION_QUEUE_IS_EMPTY"
			}
		}
	}
}
